Тук ще хвърля малко разяснения за патърна на български език.

Близнака е патерн който се ползва за наследяване на повече от един клас (което е забранено във всеки уважаван език за програмиране). В действителност близнакът не Създава никакво множествено наследяване, но се получава заблудата че има такова.

Каква е цаката:
Основният клас се разделя на толкова класове, колкото са родителите които искате да наследите. Всеки клас, част от наследника, описва само нещата от които разбира и не се занимава по никакъв начин с комуникацията с останалите части на наследника.
След това всички тези класове се скриват и се wrap-ват в една обвивка, която, макар да не наследява нито един от 'родителските' класове, се държи като тяхно дете и предоставя публична функционалност с която да използваме различните наследници. Освен това обвивката се грижи и за комуникацията между частите.

Този патерн има недостатъка че е трудно да се използва полиморфизъм с него. Макар отделните му части да са наследници на родителите си, самата обвивка не е никакъв наследник и затова в някои ситуации може да създаде проблем.
пример:

var twin = new Twin()
if(twin  is Parent1 ||
twin  is Parent2)
{
	// this will never happen
}

Един начин да се избегне това е да се даде достъп до децата, но това пък ще наруши капсулацията.

Друг недостатък е наследяването на вече създадения близнак - то е малко по-сложно от обикновеното, защото всичко трябва да се наследи. Отново, това може да се заобиколи ако се даде достъп до децата и отново - това може да наруши капсулацията.

Ето пример


var twin = new Twin(new Child1(), new Child2());

Ако децата се подават при създаване, тогава всяко едно от тях ще може да бъде подменено с неговото собствено дете, или пък пра-пра-пра-внука му... но това май вече отива към някой друг патърн и спира да бъде близнак.