Тук ще хвърля малко разяснения за патърна на български език.

Този патърн се използва за да се махне прекомерното наследяване, или просто за да е лесно да се добавя нова функционалност.
Схемата е съвсем проста - създава се илюзия за наследяване в която класът Декоратор приема като аргумент това което декорира и самият той се използва, все едно е наследник на декорирания тип. И декорирания тип и декоратора са наследници на един и същи интерфейс, но за методите на интерфейса декоратора просто вика същия метод на полето което притежава. В наследяването това би изглеждало така: base.DoAThing();

Всеки декоратор добавя някакви методи и променливи, които да вършат новите неща, върху началния обект.

В лекцията за патърни бе изпуснато нещо много важно за този конкретен патърн (вероятно лектора мислеше че се подразбира). То е причината декоратора също да наследява интрфейса на това което декорира. От една страна това е полезно за полиморфизма - тоест декоратора може да се третира като обекта който декорира и това е яко, но истинската полезност е далеч по-голяма.
Бидейки от същия клас, самият декоратор също може да бъде декориран. Тоест е възможно да се напише нещо като:

IDecoratable basicItem = new BasicItem();

IDecoratable printableItem = new PrintableDecorator(basicItem);
IDecoratable sellableItem = new SellableDecorator(printableItem);
IDecoratable burnableItem = new BurnableDecorator(sellableItem);
IDecoratable explodingItem = new ExplodingDecorator(burnableItem);

IDecoratable finalItem = explodingItem;

finalItem.DoBasicItemThings();
finalItem.Print();
finalItem.SellTo(person);
finalItem.Burn();
finalItem.Explode();

Тук има една уловка.
Да предположим че BurnableDecorator и ExplodingDecorator имат променливи с еднакви имена - temperature.
Това може да се избегне ако имената станат по-сложни, но ако има 1000 декоратора, имената ще станат ужасяващо гадни.
Вместо това може да се направи някакво анонимно (или не чак толкова анонимно) обектче вътре във всеки декоратор, такова че да съдържа всичките полета и пропъртита.

Тогава кода ще стане:
burnTemeprature = finalItem.Burning.temperature;
explodeTemperature = FinalItem.Exploding.temperature;

Методите ще са:
finalItem.Burning.Burn();
finalItem.Exploding.Explode();

Айде Стига толкова за сега.
Това е истинската сила на този патърн. Никога не съм го ползвал, но вече ми е любим. Ако се комбинира с някакво фактори ще е наистина страхотен. Остава само да измисля достатъчно голям проект в който да има смисъл от тези неща.
(май слагам каруцата пред коня).